var cov_12iodz48mw=function(){var path='/Users/icehism/MEGAsync/Code/CSE112/cse112_oldproj/lib/auth.js',hash='dd3e4a64d24a4da56c8c320d01b9860324ad86b4',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/icehism/MEGAsync/Code/CSE112/cse112_oldproj/lib/auth.js',statementMap:{'0':{start:{line:1,column:13},end:{line:1,column:37}},'1':{start:{line:2,column:12},end:{line:2,column:28}},'2':{start:{line:3,column:0},end:{line:5,column:2}},'3':{start:{line:4,column:4},end:{line:4,column:66}},'4':{start:{line:13,column:0},end:{line:15,column:2}},'5':{start:{line:14,column:4},end:{line:14,column:61}},'6':{start:{line:26,column:4},end:{line:26,column:39}},'7':{start:{line:26,column:21},end:{line:26,column:38}},'8':{start:{line:27,column:18},end:{line:27,column:39}},'9':{start:{line:30,column:4},end:{line:32,column:5}},'10':{start:{line:31,column:8},end:{line:31,column:25}},'11':{start:{line:34,column:16},end:{line:34,column:26}},'12':{start:{line:36,column:4},end:{line:47,column:7}},'13':{start:{line:37,column:8},end:{line:40,column:9}},'14':{start:{line:38,column:12},end:{line:38,column:51}},'15':{start:{line:39,column:12},end:{line:39,column:29}},'16':{start:{line:42,column:8},end:{line:44,column:9}},'17':{start:{line:43,column:12},end:{line:43,column:29}},'18':{start:{line:46,column:8},end:{line:46,column:20}},'19':{start:{line:59,column:0},end:{line:75,column:2}},'20':{start:{line:61,column:20},end:{line:61,column:39}},'21':{start:{line:63,column:4},end:{line:74,column:7}},'22':{start:{line:64,column:8},end:{line:66,column:9}},'23':{start:{line:65,column:12},end:{line:65,column:60}},'24':{start:{line:67,column:8},end:{line:72,column:9}},'25':{start:{line:68,column:12},end:{line:68,column:30}},'26':{start:{line:71,column:12},end:{line:71,column:34}},'27':{start:{line:73,column:6},end:{line:73,column:21}},'28':{start:{line:86,column:4},end:{line:94,column:7}},'29':{start:{line:87,column:8},end:{line:92,column:9}},'30':{start:{line:88,column:12},end:{line:88,column:33}},'31':{start:{line:90,column:12},end:{line:90,column:40}},'32':{start:{line:91,column:12},end:{line:91,column:26}},'33':{start:{line:97,column:0},end:{line:97,column:36}},'34':{start:{line:98,column:0},end:{line:98,column:42}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:3,column:23},end:{line:3,column:24}},loc:{start:{line:3,column:43},end:{line:5,column:1}},line:3},'1':{name:'(anonymous_1)',decl:{start:{line:13,column:24},end:{line:13,column:25}},loc:{start:{line:13,column:64},end:{line:15,column:1}},line:13},'2':{name:'isValidToken',decl:{start:{line:25,column:9},end:{line:25,column:21}},loc:{start:{line:25,column:42},end:{line:48,column:1}},line:25},'3':{name:'(anonymous_3)',decl:{start:{line:36,column:46},end:{line:36,column:47}},loc:{start:{line:36,column:70},end:{line:47,column:5}},line:36},'4':{name:'(anonymous_4)',decl:{start:{line:59,column:24},end:{line:59,column:25}},loc:{start:{line:59,column:58},end:{line:75,column:1}},line:59},'5':{name:'(anonymous_5)',decl:{start:{line:63,column:38},end:{line:63,column:39}},loc:{start:{line:63,column:61},end:{line:74,column:5}},line:63},'6':{name:'isAuthenticated',decl:{start:{line:85,column:9},end:{line:85,column:24}},loc:{start:{line:85,column:41},end:{line:95,column:1}},line:85},'7':{name:'(anonymous_7)',decl:{start:{line:86,column:52},end:{line:86,column:53}},loc:{start:{line:86,column:70},end:{line:94,column:5}},line:86}},branchMap:{'0':{loc:{start:{line:26,column:4},end:{line:26,column:39}},type:'if',locations:[{start:{line:26,column:4},end:{line:26,column:39}},{start:{line:26,column:4},end:{line:26,column:39}}],line:26},'1':{loc:{start:{line:30,column:4},end:{line:32,column:5}},type:'if',locations:[{start:{line:30,column:4},end:{line:32,column:5}},{start:{line:30,column:4},end:{line:32,column:5}}],line:30},'2':{loc:{start:{line:30,column:8},end:{line:30,column:54}},type:'binary-expr',locations:[{start:{line:30,column:8},end:{line:30,column:28}},{start:{line:30,column:32},end:{line:30,column:54}}],line:30},'3':{loc:{start:{line:37,column:8},end:{line:40,column:9}},type:'if',locations:[{start:{line:37,column:8},end:{line:40,column:9}},{start:{line:37,column:8},end:{line:40,column:9}}],line:37},'4':{loc:{start:{line:42,column:8},end:{line:44,column:9}},type:'if',locations:[{start:{line:42,column:8},end:{line:44,column:9}},{start:{line:42,column:8},end:{line:44,column:9}}],line:42},'5':{loc:{start:{line:64,column:8},end:{line:66,column:9}},type:'if',locations:[{start:{line:64,column:8},end:{line:66,column:9}},{start:{line:64,column:8},end:{line:66,column:9}}],line:64},'6':{loc:{start:{line:67,column:8},end:{line:72,column:9}},type:'if',locations:[{start:{line:67,column:8},end:{line:72,column:9}},{start:{line:67,column:8},end:{line:72,column:9}}],line:67},'7':{loc:{start:{line:67,column:11},end:{line:67,column:75}},type:'binary-expr',locations:[{start:{line:67,column:11},end:{line:67,column:20}},{start:{line:67,column:24},end:{line:67,column:75}}],line:67},'8':{loc:{start:{line:87,column:8},end:{line:92,column:9}},type:'if',locations:[{start:{line:87,column:8},end:{line:92,column:9}},{start:{line:87,column:8},end:{line:92,column:9}}],line:87}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var bcrypt=(++cov_12iodz48mw.s[0],require('bcrypt-nodejs'));var async=(++cov_12iodz48mw.s[1],require('async'));++cov_12iodz48mw.s[2];exports.hashPassword=function(password){++cov_12iodz48mw.f[0];++cov_12iodz48mw.s[3];return bcrypt.hashSync(password,bcrypt.genSaltSync(8),null);};/**
 * Calls compareSync to check the given password against the password stored in the database
 * @param {String} storedPassword The password stored in the database
 * @param {String} givenPassword The password given by the user
 * @returns {boolean} True if the passwords matched, false otherwise
 */++cov_12iodz48mw.s[4];exports.validPassword=function(storedPassword,givenPassword){++cov_12iodz48mw.f[1];++cov_12iodz48mw.s[5];return bcrypt.compareSync(givenPassword,storedPassword);};/**
 * Verifies if a mobile token is proper.
 *
 * @param {Object} db A mongoDB
 * @param {Object} authHeader The req.headers.authorization token. Expect to be in form `Token _id`
 * @param {Function} fn Callback function
 * @return fn(false) if an error was found, fn(true) otherwise
 */function isValidToken(db,authHeader,fn){++cov_12iodz48mw.f[2];++cov_12iodz48mw.s[6];if(!authHeader){++cov_12iodz48mw.b[0][0];++cov_12iodz48mw.s[7];return fn(false);}else{++cov_12iodz48mw.b[0][1];}var matches=(++cov_12iodz48mw.s[8],authHeader.split(' '));//Check that it's basic auth in right format
++cov_12iodz48mw.s[9];if((++cov_12iodz48mw.b[2][0],matches.length!==2)||(++cov_12iodz48mw.b[2][1],matches[0]!=='Token')){++cov_12iodz48mw.b[1][0];++cov_12iodz48mw.s[10];return fn(false);}else{++cov_12iodz48mw.b[1][1];}var token=(++cov_12iodz48mw.s[11],matches[1]);++cov_12iodz48mw.s[12];db.get('mobileTokens').find({_id:token},function(err,results){++cov_12iodz48mw.f[3];++cov_12iodz48mw.s[13];if(err){++cov_12iodz48mw.b[3][0];++cov_12iodz48mw.s[14];console.error('MongoDB Error: '+err);++cov_12iodz48mw.s[15];return fn(false);}else{++cov_12iodz48mw.b[3][1];}++cov_12iodz48mw.s[16];if(!results){++cov_12iodz48mw.b[4][0];++cov_12iodz48mw.s[17];return fn(false);}else{++cov_12iodz48mw.b[4][1];}++cov_12iodz48mw.s[18];fn(results);});}/**
 * Verifies that a login is valid before calling a function
 *
 * @param {Object} db A mongoDB
 * @param {String} email The email used to login
 * @param {String} password The password used to login
 * @param {Function} fn The callback function
 * @return fn(true) if the login is successful, fn(false) otherwise
 */++cov_12iodz48mw.s[19];exports.validateLogin=function(db,email,password,fn){++cov_12iodz48mw.f[4];var isEmployee;var employees=(++cov_12iodz48mw.s[20],db.get('employees'));++cov_12iodz48mw.s[21];employees.findOne({email:email},function(err,employee){++cov_12iodz48mw.f[5];++cov_12iodz48mw.s[22];if(err){++cov_12iodz48mw.b[5][0];++cov_12iodz48mw.s[23];console.error('validateLogin DB Error: '+err);}else{++cov_12iodz48mw.b[5][1];}++cov_12iodz48mw.s[24];if((++cov_12iodz48mw.b[7][0],!employee)||(++cov_12iodz48mw.b[7][1],!exports.validPassword(employee.password,password))){++cov_12iodz48mw.b[6][0];++cov_12iodz48mw.s[25];isEmployee=null;}else{++cov_12iodz48mw.b[6][1];++cov_12iodz48mw.s[26];isEmployee=employee;}++cov_12iodz48mw.s[27];fn(isEmployee);});};/**
 * Middleware authentication which will call the next function if successful
 * otherwise 403 forbidden
 * @param {Object} req The request object
 * @param {Object} res The response object
 * @param {Function} next The function to call if successful
 * @return next() if req contains a valid token, 403 otherwise
 */function isAuthenticated(req,res,next){++cov_12iodz48mw.f[6];++cov_12iodz48mw.s[28];isValidToken(req.db,req.headers.authorization,function(result){++cov_12iodz48mw.f[7];++cov_12iodz48mw.s[29];if(!result){++cov_12iodz48mw.b[8][0];++cov_12iodz48mw.s[30];return res.send(403);}else{++cov_12iodz48mw.b[8][1];++cov_12iodz48mw.s[31];req.mobileToken=result[0];++cov_12iodz48mw.s[32];return next();}});}++cov_12iodz48mw.s[33];exports.isValidToken=isValidToken;++cov_12iodz48mw.s[34];exports.isAuthenticated=isAuthenticated;